# CI workflow that runs on push to main and pull requests
name: CI

# Trigger the workflow on push to main branch and pull requests
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # Job to run all tests and code quality checks
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12]

    steps:
      # Check out the repository code
      - uses: actions/checkout@v3

      # Set up Python environment
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # Install Poetry for dependency management
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.5.1
          virtualenvs-create: true
          virtualenvs-in-project: true

      # Install project dependencies including development dependencies
      - name: Install dependencies
        run: |
          poetry install --with dev

      # Run code style checks
      # - name: Lint with flake8
      #   run: |
      #     poetry run flake8 promptflow tests

      # Check code formatting
      # - name: Check formatting with black
      #   run: |
      #     poetry run black --check promptflow tests

      # Check import sorting
      # - name: Check imports with isort
      #   run: |
      #     poetry run isort --check-only promptflow tests

      # Run type checking
      # - name: Type check with mypy
      #   run: |
      #     poetry run mypy promptflow

      # Run unit tests
      - name: Test with pytest
        run: |
          poetry run pytest

  # Job to build the package
  build:
    needs: test # Only run if tests pass
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Set up Python for building
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      # Install Poetry for building
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.5.1
          virtualenvs-create: true
          virtualenvs-in-project: true

      # Build the package
      - name: Build package
        run: |
          poetry build

      # Upload the built package as an artifact
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/
